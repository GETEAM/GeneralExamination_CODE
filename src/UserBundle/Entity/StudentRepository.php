<?php

namespace UserBundle\Entity;

/**
 * StudentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StudentRepository extends \Doctrine\ORM\EntityRepository
{
	//添加/编辑单个学生(编辑学生时的操作和添加学生相似)
    public function add($student) {
    	$em = $this->getEntityManager();
        $em->persist($student);
        $em->flush();
        return true;
    }

	//删除单个学生
    public function delete($id) {
    	$em = $this->getEntityManager();
        $student=$this->findOneById($id);
        $em->remove($student);
        $em->flush();
        return true;
    }

    //批量删除学生
    public function multiDelete($ids) {
    	foreach( $ids as $id ) {
    		$this->delete($id);
    	}
    	return true;
    }

   

    //根据学号，姓名，年级和学院查找到学生列表
    public function findStudentByAny($studentId,$name,$description,$academyName){

        $sql='SELECT s '.($description ? ',g' : '').''.($academyName ? ',a' : '').' FROM UserBundle:Student s '
        .($description ? 'JOIN s.grade g' : '').''.($academyName ? ' JOIN s.academy a ' : '')
        .'WHERE '.($studentId ? 's.studentId like :studentId' : '').''
        .($studentId && $name ? ' AND ' : '').''.($name ? 's.name like :name' : '').''
        .(($studentId || $name) && $description ? ' AND ' : '').''.($description ? 'g.description = :description' : '')
        .(($studentId || $name || $description) && $academyName  ? ' AND ' : '').''.($academyName ? 'a.academyName = :academyName' : '');


        //$arr=array('studentId'=> '%'.$name.'%','name' => '%'.$name.'%','description' => $description,'academyName'=> $academyName);
        $arr=array();

        if($studentId!=''){
            $arr['studentId']='%'.$studentId.'%';
        }
        if($name!=''){
            $arr['name']='%'.$name.'%';
        }
        if($description!=''){
            $arr['description']=$description;
        }
        if($academyName!=''){
            $arr['academyName']=$academyName;
        }   
       return $this->getEntityManager()
            ->createQuery($sql
            )
            ->setParameters($arr)
            ->getResult();
    }

     //根据学号，姓名，年级和学院查找到学生列表
    public function findStudent($studentId,$name,$description,$academyName){
       return $this->getEntityManager()
            ->createQuery('SELECT s, g, a FROM UserBundle:Student s
            JOIN s.grade g JOIN s.academy a
            WHERE s.studentId like :studentId AND s.name like :name AND g.description = :description AND a.academyName = :academyName'
            )
            ->setParameter('studentId','%'.$studentId.'%')
            ->setParameter('name','%'.$name.'%')
            ->setParameter('description',$description)
            ->setParameter('academyName',$academyName)
            ->getResult();
    }
}
